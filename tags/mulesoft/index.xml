<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MuleSoft on Yogesh Dhimate</title><link>https://www.dhimate.com/tags/mulesoft/</link><description>Recent content in MuleSoft on Yogesh Dhimate</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 23 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dhimate.com/tags/mulesoft/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Epic's FHIR APIs in Mule 4</title><link>https://www.dhimate.com/2021/using-epics-fhir-apis-in-mule-4/</link><pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.dhimate.com/2021/using-epics-fhir-apis-in-mule-4/</guid><description>Introduction FHIR (Fast Healthcare Interoperability Resources) is a new and emerging standard for interoperability in healthcare IT. Unlike the ancient HL7v2 standard, FHIR is open, extensible, and composable. It supports modern web standards like JSON, XML, HTTP(!), and Turtle. It also defines different data exchange methods like RESTful API, messaging, services, documents, and persistent storage. Best of all the FHIR documentation is outstanding: There is detail documentation for every type of resource, with lots of examples.</description></item><item><title>How to Use Different Authentication Options for Salesforce Connector in Mule 4</title><link>https://www.dhimate.com/2021/how-to-use-different-authentication-options-for-salesforce-connector-in-mule-4/</link><pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.dhimate.com/2021/how-to-use-different-authentication-options-for-salesforce-connector-in-mule-4/</guid><description>Introduction MuleSoft offers multiple connectors for Salesforce integration. This post is about Salesforce Connector for Mule 4. This connector helps in integrating with Sales Cloud, Service Cloud, Salesforce Platform, and Force.com. We will specifically look into different options for authentication with Salesforce.
Software Prerequisites You need a Salesforce developer account. You can get one for free by signing up here. I have used the following versions for MuleSoft software.
Anypoint Studio 7.</description></item><item><title>Externalizing Queries in Mule Application</title><link>https://www.dhimate.com/2021/externalizing-queries-in-mule-application/</link><pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.dhimate.com/2021/externalizing-queries-in-mule-application/</guid><description>I like to keep my code clean, understandable, and readable. It helps the next person who will take over my work. I try my best to avoid any trouble reading, maintaining, and updating the code. There are recommended and well known best practices about organizing Mule code. It involves better structuring of the project, maintaining configuration files, hiding or securing sensitive information like passwords and API keys, transaction management, or reconnection and caching strategies.</description></item><item><title>How to Use Netcat to Debug Cloudhub Networking Issues</title><link>https://www.dhimate.com/2021/how-to-use-netcat-to-debug-cloudhub-networking-issues/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.dhimate.com/2021/how-to-use-netcat-to-debug-cloudhub-networking-issues/</guid><description>This is a simple trick I use to debug connection issues with the mule app deployed to CloudHub.
First of all its important to understand that there are different ways to set up your application
1. Using shared load balancer (i.e. cloudhub.io domain) with HTTP protocol.
In this scenario, the client application makes a request to a shared load balancer URL using HTTP protocol. The SLB forwards the request to the upstream mule application listening on port 8081.</description></item><item><title>Upload Attachments to Salesforce Using MuleSoft</title><link>https://www.dhimate.com/2020/upload-attachments-to-salesforce-using-mulesoft/</link><pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.dhimate.com/2020/upload-attachments-to-salesforce-using-mulesoft/</guid><description>This question comes up occasionally in my conversations with customers. Often there is a need to programmatically upload an attachment (a pdf or an image) file to Salesforce using MuleSoft. If the integration developer is not very familiar with the Salesforce Platform, it usually confusing due to the way Salesforce manages the attachments.
As shown in the following ER diagram, there are multiple entities involved in storing and managing the attachments in Salesforce erDiagram ContentDocument ||--|{ ContentDocumentLink : has ContentDocument { string Id string Title string PathOnClient date CreatedDate } ContentDocumentLink ||--|| Account : linkedEntity ContentDocumentLink { string Id reference LinkedEntityId reference ContentDocumentId picklist ShareType picklist Visibility } Account { string Id string AccountNumber } ContentDocumentLink ||--|| Contact : linkedEntity Contact { string Id string FirstName string LastName } ContentDocumentLink ||--|| sObject : linkedEntity sObject { string Id string SomeProperty } Things to note:</description></item><item><title>MuleSoft Capacity Explanation for Noobs and CXOs</title><link>https://www.dhimate.com/2020/mulesoft-capacity-explanation-for-noobs-and-cxos/</link><pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.dhimate.com/2020/mulesoft-capacity-explanation-for-noobs-and-cxos/</guid><description>I was talking to a C-level executive the other day and he asked me to explain how does MuleSoft&amp;rsquo;s capacity/sizing across various deployment models work. Given I always wear my technical hat I jumped right into the concept of cores and virtual cores and containers (and Kubernetes!) and did a pretty bad job. Fortunately, that executive was very accomodating and somewhat understood what I was talking about. Nevertheless, I should&amp;rsquo;ve done better.</description></item></channel></rss>