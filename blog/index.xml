<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Yogesh Dhimate</title>
    <link>https://www.dhimate.com/blog/</link>
    <description>Recent content in Blog on Yogesh Dhimate</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 23 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dhimate.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test CI</title>
      <link>https://www.dhimate.com/blog/2020/test/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.dhimate.com/blog/2020/test/</guid>
      <description>Test the CI pipeline</description>
    </item>
    
    <item>
      <title>MuleSoft Capacity Explanation for Noobs and CXOs </title>
      <link>https://www.dhimate.com/blog/2020/mule-cloudhub-vs-onprem/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.dhimate.com/blog/2020/mule-cloudhub-vs-onprem/</guid>
      <description>I was talking to a C-level executive the other day and he asked me to explain how does MuleSoft&amp;rsquo;s capacity/sizing across various deployment models work. Given I always wear my technical hat I jumped right into the concept of cores and virtual cores and containers (and Kubernetes!) and did a pretty bad job. Fortunately, that executive was very accomodating and somewhat understood what I was talking about. Nevertheless, I should&amp;rsquo;ve done better.</description>
    </item>
    
    <item>
      <title>Google Spreadsheets and ArrayFormula for XIRR Calculation</title>
      <link>https://www.dhimate.com/blog/2017/google-spreadsheet-and-arrayformula/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.dhimate.com/blog/2017/google-spreadsheet-and-arrayformula/</guid>
      <description>I was looking for a simple way to calculate performance of my investments over time. Popular portfolio trackers like Moneycontrol and Value Research did not meet my needs. So I decided to try out Google Spreadsheets. Nice thing with Google Spreadsheets is its support for import and queries. e.g. AMFI India publishes daily NAVâ€™s on their website http://portal.amfiindia.com/spages/NAV1.txt You can import the data programmatically and run a query on it to find desired NAV.</description>
    </item>
    
    <item>
      <title>Automated Testing of Webmethods Services with REST Assured</title>
      <link>https://www.dhimate.com/blog/2017/automated-testing-of-webmethods/</link>
      <pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.dhimate.com/blog/2017/automated-testing-of-webmethods/</guid>
      <description>While testing REST APIs for one of my projects, I found REST Assured. It was perfect, as it took care of low level HTTP calls under the hood, and provided a high-level, easy to use framework to write tests. Not only REST Assured works really well to test webMethods flow services, you can also run these tests as part of Continuous Integration process through Gradle.
You will need following things on your machine.</description>
    </item>
    
    <item>
      <title>Integration Server Class Loading for Custom Jars</title>
      <link>https://www.dhimate.com/blog/2016/integration-server-class-loading/</link>
      <pubDate>Tue, 16 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.dhimate.com/blog/2016/integration-server-class-loading/</guid>
      <description>If a specific functionality is not available out of box from the integration server, you often need to use external jars or java libraries in IS. e.g. If you want to generate a PDF document or excel spreadsheet on your IS, you need to use your preferred libraries like IText or Apache POI.
It is not recommended to place your custom jars in the IntegrationServer/lib/jars folder. But Integration Server provides you couple of places to place these jars depending on how you want them to be loaded.</description>
    </item>
    
  </channel>
</rss>
